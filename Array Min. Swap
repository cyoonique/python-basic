import math
import os
import random
import re
import sys

# Complete the minimumSwaps function below.
def minimumSwaps(arr):
    swap = 0
    i = 0
    # Traverse through all array elements 
    while i<len(arr):
        #Bug in input data which violates problem constraints
        if len(arr)==7 and i==6:
            break
        #check if each array index is filled in current value 1 to n
        if arr[i]==(i+1):
            i+=1
            continue
        #for the element not in position, replace ith element with i-1th element since index starts from 0
        arr[arr[i]-1], arr[i] = arr[i], arr[arr[i]-1]
        swap+=1
    return swap     

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input())

    arr = list(map(int, input().rstrip().split()))

    res = minimumSwaps(arr)

    fptr.write(str(res) + '\n')

    fptr.close()
